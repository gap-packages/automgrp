#############################################################################
##
#W  automgroup.gd             automata package                 Yevgen Muntyan
##
##  automata v0.9, started 01/22/2004
##

Revision.automgroup_gd :=
  "@(#)$Id$";


#############################################################################
##
#C  IsAutomGroup( <G> )
##
##  returns true if G is a group generated by elements from category
##  IsAutom
##
DeclareSynonym("IsAutomGroup", IsGroup and IsAutomCollection);

DeclareOperation("AutomGroup", [IsList]);

DeclareAttribute("UnderlyingAutomFamily", IsAutomGroup);

DeclareProperty("IsActingOnBinaryTree", IsAutomGroup);

DeclareProperty("IsFractalByWords", IsAutomGroup);
DeclareAttribute("StabilizerOfFirstLevel", IsAutomGroup);
DeclareOperation("StabilizerOfLevel", [IsAutomGroup, IsInt]);
DeclareOperation("StabilizerOfVertex", [IsAutomGroup, IsInt]);

DeclareAttribute("MihaylovSystem", IsAutomGroup, "mutable");

DeclareProperty("IsSphericallyTransitive", IsAutomGroup);
##  Fractal means that St_G(x) > G for any x\in X and G is spherically
##  transitive
DeclareProperty("IsFractal", IsAutomGroup);
DeclareProperty("IsContracting", IsAutomGroup);
##  SelfSimilar means that G < G\wreath S_d - state closed
DeclareProperty("IsSelfSimilar", IsAutomGroup);
DeclareProperty("IsFreeNonabelian", IsAutomGroup);
##  trivial group is not IsFreeAbelian
DeclareProperty("IsFreeAbelian", IsAutomGroup);

DeclareFilter("CanEasilyTestSphericalTransitivity");
DeclareFilter("CanEasilyComputeSize");
DeclareFilter("CanEasilyTestFractalness");
DeclareFilter("CanEasilyTestContractingProperty");
DeclareFilter("CanEasilyTestSelfSimilarity");
DeclareFilter("CanEasilyTestBeingFreeNonabelian");
DeclareFilter("CanEasilyTestBeingFreeAbelian");


#E
