%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Chapter{Properties and operations for all groups acting on trees}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Section{Operations with group elements}

In the examples below we will consider the elements of the lamplighter group. First we define it as
\beginexample
gap> G:=AutomGroup("a=(a,b)(1,2),b=(a,b)");
< a, b >
\endexample

The multiplication of tree homomorphisms is defined in the standard way 

\>`<a> \* <b>'{product}!{for tree homomorphisms}

The following operations allow to compute the actions of tree homomorphisms on letters and vertices

\>`<letter> ^ <a>'{action}!{of tree homomorphism on letter}
\>`<vertex> ^ <a>'{action}!{of tree homomorphism on vertex}

\beginexample
gap> 1^a;
2
gap> [1,2,2,1,2,1]^(a*b^2);
[ 2, 1, 2, 2, 1, 2 ]
\endexample

\Declaration{Perm}
\Declaration{PermOnLevel}
\Declaration{PermOnLevelAsMatrix}

The operations below describe how to work with sections of tree homomorphisms.

\Declaration{State}
\Declaration{States}
\Declaration{Expand}

One can compute the following properties.
\Declaration{IsOne}
\Declaration{Order}
\Declaration{\in}
\Declaration{IsSphericallyTransitive}[treeaut.gd]
\Declaration{IsTransitiveOnLevel}
\Declaration{Word}



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Section{Operations with groups}

In the examples below we will consider the elements of Basilica group and 
Grigorchuk group. First we define them as
\beginexample
gap> Basilica:=AutomGroup("u=(v,1)(1,2),v=(u,1)");
< u, v >
gap> GrigorchukGroup:=AutomGroup("a=(1,1)(1,2),b=(a,c),c=(a,d),d=(1,b)");
< a, b, c, d >
\endexample

\Declaration{IsFractal}
\Declaration{IsSphericallyTransitive}
\Declaration{IsTransitiveOnLevel}
\Declaration{IsSelfSimilar}
\Declaration{AbelImage}
\Declaration{PermGroupOnLevel}
\Declaration{StabilizerOfLevel}
\Declaration{StabilizerOfFirstLevel}
\Declaration{StabilizerOfVertex}
\Declaration{FixesLevel}
\Declaration{FixesVertex}
\Declaration{Projection}
\Declaration{ProjStab}
\Declaration{FindGroupElement}
\Declaration{FindGroupElements}
\Declaration{FindElementOfInfiniteOrder}
\Declaration{FindElementsOfInfiniteOrder}
\Declaration{AutomGroupGrowth}
\Declaration{AutomGroupElements}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
