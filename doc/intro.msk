%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Chapter{Introduction}

The project was originally started in 2000 mostly for personal use. It was gradually
expandig during consequent years, including both addition of new algorithms and simplification of
user interface. It was used in the process of classification of groups generated by $3$-state
automata over 2-letter alphabet.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Section{Short math background}

\cite{harpe}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Section{Quick example}


Here is how we define Grigorchuk and Basilica groups

\beginexample
gap> G:=AutomGroup("a=(1,1)(1,2),b=(a,c),c=(a,d),d=(1,b)");
< a, b, c, d >
gap> B:=AutomGroup("u=(v,1)(1,2),v=(u,1)");
< u, v >
\endexample

Now we can compute several properties of $G$ and $B$

\beginexample
gap> IsFinite(G);
false
gap> IsSphericallyTransitive(G);
true
gap> IsFractal(G);
true
gap> IsAbelian(G);
false
gap> IsTransitiveOnLevel(G,4);
true
\endexample

We can also check that $G$ is contracting and compute its nucleus
\beginexample
gap> IsContracting(G);
#I  n=5
true
gap> AutomNucleus(G);
[e, a, b, c, d]
\endexample

The group $G$ is generated by bounded automaton and, thus, is amenable (see \cite{bartholdi-k-n-v:bounded})
\beginexample
gap> IsGeneratedByBoundedAutomaton(G);
true
gap> IsAmenable(G);
true
\endexample


We can compute the stabilizers of levels and vertices
\beginexample
gap> StabilizerOfLevel(G,2);
< c*b^-1, d, a^2, a*c*b^-1*a^-1, a*d*a^-1, b^2, b*c, b*d*b^-1, a*b^2*a^
-1, a*b*c*a^-1, a*b*d*b^-1*a^-1, b*a^2*b^-1, b*a*c*b^-1*a^-1*b^-1, b*a*d*a^-1*b^
-1, a*b*a^2*b^-1*a^-1, a*b*a*c*b^-1*a^-1*b^-1*a^-1, a*b*a*d*a^-1*b^-1*a^
-1, b*a*b*a*b^-1*a^-1*b^-1*a^-1, b*a*b^2*a^-1*b^-1, b*a*b*c*a^-1*b^-1, b*a*b*d*b^
-1*a^-1*b^-1, a*b*a*b*a*b^-1*a^-1*b^-1, a*b*a*b^2*a^-1*b^-1*a^-1, a*b*a*b*c*a^
-1*b^-1*a^-1, a*b*a*b*d*b^-1*a^-1*b^-1*a^-1 >
gap> StabilizerOfVertex(G,[2,1]);
< b, c, d, a^2, a*c*b^-1*a^-1, a*d*a^-1, a*b^2*a^-1, a*b*c*a^-1, a*b*d*b^-1*a^
-1, a*b*a^2*b^-1*a^-1, a*b*a*b*a^-1*b^-1*a^-1, a*b*a*c*a^-1*b^-1*a^-1, a*b*a*d*a^
-1*b^-1*a^-1 >
\endexample

In case of finite group we can produce an isomorphism into permutational group
\beginexample
gap> f:=IsomorphismPermGroup(Group(a,b));
[ a, b ] -> [ (1,2)(3,5)(4,6)(7,9)(8,10)(11,13)(12,14)(15,17)(16,18)(19,21)(20,
    22)(23,25)(24,26)(27,29)(28,30)(31,32), (1,3)(2,4)(5,7)(6,8)(9,11)(10,12)(13,
    15)(14,16)(17,19)(18,20)(21,23)(22,24)(25,27)(26,28)(29,31)(30,32) ]
gap> Size(Image(f));
32
\endexample

Here is how to find relations in $B$ between elements of length not greater than 5.
\beginexample
gap> FindRelations(B,5);
[ v*u*v*u^-1*v^-1*u*v^-1*u^-1, v*u*v^2*u^-1*v^-1*u*v^-2*u^-1,
  v^2*u*v*u^-1*v^-2*u*v^-1*u^-1 ]
\endexample

Or relations in the subgroup <x=u*v^{-1}, y=v*u>
\beginexample
gap> FindRelationsSubs([u*v^-1,v*u],["x","y"],5);
#I  Length not greater than 2: 17
#I  Length not greater than 3: 53
#I  y*x^2*y*x^-1*y^-2*x^-1
#I  Length not greater than 4: 153
#I  Length not greater than 5: 429
[ y*x^2*y*x^-1*y^-2*x^-1 ]
\endexample


Some basic operations with elements are the following:

The function ``IsOne'' computes whether an element represents the trivial automorphism of the tree
\beginexample
gap> IsOne((a*b)^16);
true
\endexample

Here is how to compute the order (this function might not stop in saome cases)
\beginexample
gap> Order(a*b);
16
gap> Order(u^22*v^-15*u^2*v*u^10);
#I  (u^22*v^-15*u^2*v*u^10)^1 has v as a section at vertex [ 1, 1, 1, 1, 1, 1, 1, 1, 1 ]
#I  (v)^2 has congutate of v as a section at vertex [ 1, 1 ]
infinity
\endexample

One can check if a particular element acts spherically transitively on the tree
\beginexample
gap> IsSphericallyTransitive(a*b);
false
gap> IsSphericallyTransitive(u*v);
true
\endexample


The sections of an element can be obtained as follows
\beginexample
gap> State(u*v^2*u,2);
u^2*v
gap> Expand(u*v^2*u);  
(v, u^2*v)
gap> Expand(u*v^2*u,3);
(v, 1, 1, 1, u*v, 1, u, 1)(1,2)(5,6)
\endexample

To get the action of an element on the vertex or on the particular level of the tree 
use the following commands
\beginexample
gap> [1,2,1,1]^(a*b);
[ 2, 2, 1, 1 ]
gap> PermOnLevel(u*v^2*v,3);
(1,6,4,8,2,5,3,7)
\endexample

The action of the whole group $G$ on some level can be computes via ``PermGroupOnLevel( <G>, <lev> )''.
\beginexample
gap> PermGroupOnLevel(G,3);
Group([ (1,5)(2,6)(3,7)(4,8), (1,3)(2,4)(5,6), (1,3)(2,4), (5,6) ])
gap> Size(last);
128
\endexample

The last example shows how to find all elements of Grigorchuk group of length at most 5, which have order 16.
\beginexample
gap> FindGroupElements(G,Order,16,5);
[ a*b, b*a, c*a*d, d*a*c, a*b*a*d, a*c*a*d, a*d*a*b, a*d*a*c, b*a*d*a, c*a*d*a, d*a*b*a, d*a*c*a,
a*c*a*d*a, a*d*a*c*a, b*a*b*a*c, b*a*c*a*c, c*a*b*a*b, c*a*c*a*b ]
\endexample

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
